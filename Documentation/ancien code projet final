for row in df_v2.itertuples():
    print(row)

df_fossile = []
for row in df_v2.itertuples():
    df_fossile.append(pd.DataFrame(row))
    print(df_fossile)
    if len(df_fossile)>1:
        try:
            frames = [df_fossile[0], df_fossile[-1]]
            df_fossile[-1] = pd.concat(frames, axis =1)
            frames = [ df_fossile[i] for i in range(0,44) ]
            result = pd.concat(frames)
        except:
            pass

#result.columns = ['annee', 'quantite']
#df_fossile
result.head(50)

df_fossile = []
for row in df_v2.iterrows():
    df_fossile.append(pd.DataFrame(row))
    print(row)
    if len(df_fossile)>1:
        try:
            frames = [df_fossile[0], df_fossile[-1]]
            df_fossile[-1] = pd.concat(frames, axis =1)
            frames = [ df_fossile[i] for i in range(0,44) ]
            result = pd.concat(frames)
        except:
            pass

#result.columns = ['annee', 'quantite']
#df_fossile
result.head(50)

df_final = pd.merge(result, code_pays, how ='left', left_on='quantite', right_on= 'Union européenne - 27 pays (à partir de 2020)')
df_final = df_final.fillna('')
df_final = df_final.drop(['Union européenne - 27 pays (à partir de 2020)'], axis=1)
df_final.columns = ['annee', 'quantite','code_pays']
df_final = df_final.set_index(['code_pays'])
df_final = df_final.reset_index(drop=False)
#df_final = df_final.fillna(value={''}'')

df_final.head(50)

test = df_final[df_final.index % 12 == 0]
df_final = df_final.drop(test, axis=1,inplace=False)
df_final

df_final.drop(df_final.index[df_final % 12 == 0], inplace=True)
df_final
